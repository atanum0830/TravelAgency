[{"C:\\projects\\travel\\travel\\src\\index.js":"1","C:\\projects\\travel\\travel\\src\\App.js":"2","C:\\projects\\travel\\travel\\src\\reportWebVitals.js":"3","C:\\projects\\travel\\travel\\src\\components\\home.js":"4","C:\\projects\\travel\\travel\\src\\components\\bookings.js":"5","C:\\projects\\travel\\travel\\src\\components\\customers.js":"6","C:\\projects\\travel\\travel\\src\\components\\tours.js":"7","C:\\projects\\travel\\travel\\src\\components\\no-match.js":"8","C:\\projects\\travel\\travel\\src\\components\\navigation.js":"9","C:\\projects\\travel\\travel\\src\\services\\firebase.js":"10","C:\\projects\\travel\\travel\\src\\components\\pagination.js":"11","C:\\projects\\travel\\travel\\src\\services\\data-service.js":"12","C:\\projects\\travel\\travel\\src\\components\\handler.js":"13","C:\\projects\\travel\\travel\\src\\model\\all-classes.js":"14","C:\\projects\\travel\\travel\\src\\components\\attractions.js":"15","C:\\projects\\travel\\travel\\src\\components\\depends-list.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":4490,"mtime":1609358265538,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":112,"mtime":1608755798565,"results":"21","hashOfConfig":"18"},{"size":118,"mtime":1608755881195,"results":"22","hashOfConfig":"18"},{"size":123,"mtime":1608756821159,"results":"23","hashOfConfig":"18"},{"size":10970,"mtime":1609371466779,"results":"24","hashOfConfig":"18"},{"size":183,"mtime":1608756649468,"results":"25","hashOfConfig":"18"},{"size":2629,"mtime":1609341949825,"results":"26","hashOfConfig":"18"},{"size":510,"mtime":1608878316440,"results":"27","hashOfConfig":"18"},{"size":1035,"mtime":1609217582331,"results":"28","hashOfConfig":"18"},{"size":1601,"mtime":1609191081393,"results":"29","hashOfConfig":"18"},{"size":2365,"mtime":1609371773420,"results":"30","hashOfConfig":"18"},{"size":1399,"mtime":1609355166482,"results":"31","hashOfConfig":"18"},{"size":13739,"mtime":1609352037438,"results":"32","hashOfConfig":"18"},{"size":1450,"mtime":1609369166037,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"ptx2ce",{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projects\\travel\\travel\\src\\index.js",[],["70","71"],"C:\\projects\\travel\\travel\\src\\App.js",["72","73","74","75"],"import \"react-datepicker/dist/react-datepicker.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport firebase from './services/firebase';\nimport dataService from './services/data-service';\nimport { AttractionComponent } from './components/attractions';\nimport { BookingComponent } from './components/bookings';\nimport { CustomerComponent } from './components/customers';\nimport { HomeComponent } from './components/home';\nimport { NavBarComponent } from './components/navigation';\nimport { NoMatchComponent } from './components/no-match';\nimport { TourComponent } from './components/tours';\nimport { TourRec } from './model/all-classes';\n\nfunction App() {\n  const toursRef = firebase.firestore().collection('tours');\n  const bookingsRef = firebase.firestore().collection('bookings');\n  const customersRef = firebase.firestore().collection('customers');\n  const attractionsRef = firebase.firestore().collection('attractions');\n\n  const [tours, setTours] = useState([]);\n  const [bookings, setBookings] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [attractions, setAttractions] = useState([]);\n\n  const [loadedTours, setLoadedTours] = useState(false);\n  const [loadedBookings, setLoadedBookings] = useState(false);\n  const [loadedAttractions, setLoadedAttractions] = useState(false);\n  const [loadedCustomers, setLoadedCustomers] = useState(false);\n\n  // update={updateAttraction} remove={removeAttraction} add={addAttraction} />\n\n  const updateAttraction = (attraction) => {\n    setLoadedAttractions(false);\n    dataService.updateRecord(attractionsRef, attraction);\n  }\n\n  const removeAttraction = (attraction) => {\n    setLoadedAttractions(false);\n    dataService.deleteRecord(attractionsRef, attraction);\n  }\n\n  const addAttraction = (attraction) => {\n    setLoadedAttractions(false);\n    dataService.insertRecord(attractionsRef, attraction);\n  }\n\n  const updateTour = (tour) => {\n    setLoadedTours(false);\n    dataService.updateRecord(toursRef, tour);\n  };\n\n  const removeTour = (tour) => {\n    setLoadedTours(false);\n    dataService.deleteRecord(toursRef, tour);\n  };\n\n  const addTour = (tour) => {\n    setLoadedTours(false);\n    dataService.insertRecord(toursRef, tour);\n  };\n\n  const loadTours = () => {\n    console.log('loadTours called');\n    toursRef.orderBy('startDate').onSnapshot((querySnapshot) => {\n      const documents = dataService.fetchSnapshotDocs(querySnapshot);\n      const tours = documents.map(document => new TourRec(document));\n      setTours(tours);\n      setLoadedTours(true);\n    });\n  }\n\n  const loadBookings = () => {\n    bookingsRef.onSnapshot((querySnapshot) => {\n      const documents = dataService.fetchSnapshotDocs(querySnapshot);\n      setBookings(documents);\n      setLoadedBookings(true);\n    });\n  }\n\n  const loadCustomers = () => {\n    customersRef.onSnapshot((querySnapshot) => {\n      const documents = dataService.fetchSnapshotDocs(querySnapshot);\n      setCustomers(documents);\n    });\n  }\n\n  const loadAttractions = () => {\n    attractionsRef.orderBy('name').onSnapshot((querySnapshot) => {\n      const documents = dataService.fetchSnapshotDocs(querySnapshot);\n      setAttractions(documents);\n      setLoadedAttractions(true);\n    });\n  }\n\n  useEffect(() => {\n    loadAttractions();\n    loadTours();\n    loadBookings();\n    // loadCustomers();\n  }, []);\n\n  return (\n    <Fragment>\n      <NavBarComponent></NavBarComponent>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={HomeComponent} />\n          <Route path='/attractions' render={(props) => (\n              <AttractionComponent records={attractions} loaded={loadedAttractions} \n                update={updateAttraction} remove={removeAttraction} add={addAttraction} />\n            )} />\n          <Route path='/tours' render={(props) => (\n              <TourComponent records={tours} loaded={loadedTours} depRecords={attractions}\n                update={updateTour} remove={removeTour} add={addTour} />\n            )} />\n          <Route path='/bookings' render={(props) => <BookingComponent bookings={bookings} loaded={loadedBookings}/>} />\n          <Route path='/customers' render={(props) => <CustomerComponent customers={customers} />} />\n          <Route component={NoMatchComponent} />\n        </Switch>\n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n","C:\\projects\\travel\\travel\\src\\reportWebVitals.js",[],"C:\\projects\\travel\\travel\\src\\components\\home.js",[],"C:\\projects\\travel\\travel\\src\\components\\bookings.js",[],"C:\\projects\\travel\\travel\\src\\components\\customers.js",[],"C:\\projects\\travel\\travel\\src\\components\\tours.js",["76","77","78"],"C:\\projects\\travel\\travel\\src\\components\\no-match.js",[],"C:\\projects\\travel\\travel\\src\\components\\navigation.js",[],"C:\\projects\\travel\\travel\\src\\services\\firebase.js",[],"C:\\projects\\travel\\travel\\src\\components\\pagination.js",["79","80"],"import React from 'react';\r\n\r\nconst Pagination = ({ itemsPerPage, totalItems, curPageNo, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalItems/ itemsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav aria-label=\"Page navigation example\">\r\n      <ul className=\"pagination\">\r\n          <li className=\"page-item\"><a className=\"page-link\" href=\"prev\">Previous</a></li>\r\n          {pageNumbers.map(pageNo => (curPageNo === pageNo) ?\r\n              <li key={pageNo} className=\"page-item active\" aria-current=\"page\">\r\n                  <a onClick={() => paginate(pageNo)} href='#' className='page-link'>{pageNo}</a>\r\n              </li> :\r\n              <li key={pageNo} className=\"page-item\">\r\n                  <a onClick={() => paginate(pageNo)} href='#' className='page-link'>{pageNo}</a>\r\n              </li>\r\n          )}\r\n          <li className=\"page-item\"><a className=\"page-link\" href=\"next\">Next</a></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n\r\n","C:\\projects\\travel\\travel\\src\\services\\data-service.js",[],"C:\\projects\\travel\\travel\\src\\components\\handler.js",["81","82"],"C:\\projects\\travel\\travel\\src\\model\\all-classes.js",[],"C:\\projects\\travel\\travel\\src\\components\\attractions.js",["83","84","85","86","87","88"],"import React, { useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport { Table, Card, Button, FormControl, InputGroup } from 'react-bootstrap';\r\nimport { format } from 'date-fns';\r\nimport { Handler } from './handler';\r\nimport { TourRec } from '../model/all-classes';\r\nimport Pagination from './pagination';\r\n\r\nexport function AttractionComponent(props) {\r\n    console.log(props);\r\n\r\n    const [isNewRecord, setIsNewRecord] = useState(false); //true for add mode, false for update/edit mode\r\n    const [pageRecords, setPageRecords] = useState([]); // array of records in a specific page (3 such records)\r\n    const [detailRecord, setDetailRecord] = useState({});\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [collChanged, setCollChanged] = useState(false);\r\n    const recordsPerPage = 10;\r\n    const isEmpty = (o) => !o || Object.keys(o).length === 0;\r\n\r\n    /**\r\n     * Generic Event handler for any Text field change\r\n     */\r\n    const handleTextChange = (event) => {\r\n        const handler = new Handler(event, detailRecord, isNewRecord);\r\n        const detail = handler.handleTextChange();\r\n        setDetailRecord(detail);\r\n    };\r\n\r\n    /**\r\n     * Generic Event handler for any Boolean field change\r\n     */\r\n    const handleBooleanChange = (event) => {\r\n        const handler = new Handler(event, detailRecord, isNewRecord);\r\n        const detail = handler.handleBooleanChange();\r\n        setDetailRecord(detail);\r\n    };\r\n\r\n    /**\r\n     * Generic Event handler for any Date field change\r\n     */\r\n    const handleDateChange = (date, name) => {\r\n        const handler = new Handler({name: name, date: date}, detailRecord, isNewRecord);\r\n        const detail = handler.handleDateChange();\r\n        setDetailRecord(detail);\r\n    };\r\n    \r\n    /**\r\n     * Edit Tenant Event handler\r\n     */\r\n    const handleEditRecord = (record) => {\r\n        console.log(\"handleEditRecord >>>>>\", record);\r\n        setDetailRecord(record);\r\n        setIsNewRecord(false);\r\n    };\r\n\r\n    /**\r\n     * Add a New Tenant Event handler\r\n     */\r\n    const handleAddNewRecord = () => {\r\n        setIsNewRecord(true);\r\n        const detail = new TourRec({});\r\n        setDetailRecord(detail);\r\n    };\r\n\r\n    /**\r\n     * Delete Tenant Event handler\r\n     */\r\n    const handleDeleteRecord = (record, index) => {\r\n        props.remove(record);\r\n        setCollChanged(true);\r\n    };\r\n\r\n    /**\r\n     * SAVE/SUBMIT button Event handler\r\n     */\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (isNewRecord) {\r\n            props.add(detailRecord);\r\n            setCollChanged(true);\r\n        } else {\r\n            props.update(detailRecord);\r\n            setCollChanged(true);\r\n        }\r\n    };\r\n\r\n    // Definition of the function called getPageRecords\r\n    // This will be executed inside paginate function\r\n    const getPageRecords = (allRecords, startIndex, recordsPerPage) => {\r\n        const records = [];\r\n        for (let index = startIndex; index < startIndex + recordsPerPage && index < allRecords.length; index++) {\r\n            const record = allRecords[index];\r\n            records.push(record);\r\n        }\r\n\r\n        return records;\r\n    };\r\n\r\n    // Definition of the function called paginate. Circular bracket optional if only one param\r\n    // This is not executed here. This will be executed in the pagination component\r\n    const paginate = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n        const startIndex = (pageNumber - 1) * recordsPerPage;\r\n        const records = getPageRecords(props.records, startIndex, recordsPerPage);\r\n        setPageRecords(records);\r\n        setDetailRecord(records[0]);\r\n    };\r\n\r\n    if (isEmpty(detailRecord) && props.loaded) {\r\n        console.log(\"Initialized Tenants Component\");\r\n        setDetailRecord(props.records[0]);\r\n    }\r\n    \r\n    if (props.records && props.records.length > 0 && pageRecords.length === 0) {\r\n        paginate(1);\r\n    }\r\n\r\n    if (collChanged && props.loaded) {\r\n        paginate(currentPage);\r\n        setCollChanged(false);\r\n    }\r\n    /*\r\n    ** Use map function to build a dynamic JSX list of Card objects\r\n    ** by transforming props.records array\r\n    */\r\n    const rows = pageRecords.map((record, index) => {\r\n        const row = (\r\n        <tr key={index}>\r\n            <td style={{maxWidth: \"100px\"}}>{record.name}</td>\r\n            <td>\r\n                <i className=\"mx-2 fas fa-binoculars\" style={{color: \"MediumBlue\"}} aria-hidden=\"true\" \r\n                    onClick={() => {\r\n                        handleEditRecord(record);\r\n                    }}\r\n                ></i>\r\n                <i className=\"mx-2 far fa-edit\" style={{color: \"Indigo\"}} aria-hidden=\"true\"\r\n                    onClick={() => {\r\n                        handleEditRecord(record);\r\n                    }}\r\n                ></i>\r\n                <i className=\"mx-2 fa fa-trash\" style={{color: \"Red\"}} aria-hidden=\"true\"\r\n                    onClick={() => {\r\n                        handleDeleteRecord(record, index);\r\n                    }}\r\n                ></i>\r\n            </td>\r\n        </tr>\r\n        );\r\n        return row;\r\n    });\r\n\r\n    const leftSide = (\r\n        <Card>\r\n            <Card.Body>\r\n            <Card.Title>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">Places We Visit</div>\r\n                </div>\r\n            </Card.Title>\r\n            <Table striped bordered hover size=\"sm\">\r\n                <thead variant=\"primary\">\r\n                    <tr>\r\n                        <th>Place/Attractions</th>\r\n                        <th>\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-sm\" onClick={handleAddNewRecord}>\r\n                                <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i> New Place</button>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{rows}</tbody>\r\n            </Table>\r\n\r\n            <Pagination itemsPerPage={recordsPerPage} totalItems={props.records.length}\r\n                curPageNo={currentPage} paginate={paginate}></Pagination>\r\n\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n\r\n    /*\r\n    rightSide will be the dynamically selected Card object\r\n    when you click <Learn More> it will allocate that object to rightSide\r\n    */\r\n\r\n    const rightSide = (\r\n        <form>\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group col-md-2\">\r\n                    <label for=\"inputName\">Name</label>\r\n                    <input name=\"name\" type=\"text\" className=\"form-control\" id=\"inputName\"\r\n                        value={detailRecord.name ? detailRecord.name : \"\"} onChange={handleTextChange}></input>\r\n                </div>\r\n                <div className=\"form-group col-md-2\">\r\n                    <label for=\"inputLatitude\">Latitude</label>\r\n                    <input name=\"latitude\" type=\"text\" className=\"form-control\" id=\"inputLatitude\"\r\n                        value={detailRecord.latitude ? detailRecord.latitude : \"\"} onChange={handleTextChange}></input>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-2\">\r\n                    <label for=\"inputLongitude\">Longitude</label>\r\n                    <input name=\"longitude\" type=\"text\" className=\"form-control\" id=\"inputLongitude\"\r\n                        value={detailRecord.longitude ? detailRecord.longitude : \"\"} onChange={handleTextChange}></input>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-2\">\r\n                    <label for=\"inputAirport\">Airport</label>\r\n                    <input name=\"airport\" type=\"text\" className=\"form-control\" id=\"inputAirport\"\r\n                        value={detailRecord.airport ? detailRecord.airport : \"\"} onChange={handleTextChange}></input>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-2\">\r\n                    <label for=\"inputStation\">Station</label>\r\n                    <input name=\"station\" type=\"text\" className=\"form-control\" id=\"inputStation\"\r\n                        value={detailRecord.station ? detailRecord.station : \"\"} onChange={handleTextChange}></input>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n\r\n\r\n                <div className=\"form-floating col-md-12\">\r\n{/* \r\n                    <input name=\"description\" type=\"text\" className=\"form-control\" id=\"inputDescription\"\r\n                        value={detailRecord.description ? detailRecord.description : \"\"} onChange={handleTextChange}></input>\r\n */}\r\n                    <label for=\"inputDescription\">Attraction Highlights</label>\r\n                    <textarea name=\"description\" class=\"form-control\" style={{height: \"100px\"}} placeholder=\"Provide details of the attraction\" id=\"inputDescription\"\r\n                        value={detailRecord.description ? detailRecord.description : \"\"} onChange={handleTextChange}></textarea>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col shadow col-md-3 mb-5 bg-white rounded\">\r\n                <div className=\"form-group col-md-3\">\r\n                    <input name=\"mountain\" type=\"checkbox\" className=\"form-check-input px-0\" id=\"inputMountain\"\r\n                        checked={detailRecord.mountain ? detailRecord.mountain : false} onChange={handleBooleanChange}></input>\r\n                    <label className=\"form-check-label\" for=\"inputMountain\">Mountain/Hiking</label>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-3\">\r\n                    <input name=\"city\" type=\"checkbox\" className=\"form-check-input px-0\" id=\"inputCity\"\r\n                        checked={detailRecord.city ? detailRecord.city : false} onChange={handleBooleanChange}></input>\r\n                    <label className=\"form-check-label\" for=\"inputCity\">Important/City/Capital</label>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-3\">\r\n                    <input name=\"palace\" type=\"checkbox\" className=\"form-check-input px-0\" id=\"inputPalace\"\r\n                        checked={detailRecord.palace ? detailRecord.palace : false} onChange={handleBooleanChange}></input>\r\n                    <label className=\"form-check-label\" for=\"inputPalace\">Palace/Castles/Fort</label>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-3\">\r\n                    <input name=\"beach\" type=\"checkbox\" className=\"form-check-input px-0\" id=\"inputBeach\"\r\n                        checked={detailRecord.beach ? detailRecord.beach : false} onChange={handleBooleanChange}></input>\r\n                    <label className=\"form-check-label\" for=\"inputBeach\">Sea/Ocean/Beach</label>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-3\">\r\n                    <input name=\"river\" type=\"checkbox\" className=\"form-check-input px-0\" id=\"inputRiver\"\r\n                        checked={detailRecord.river ? detailRecord.river : false} onChange={handleBooleanChange}></input>\r\n                    <label className=\"form-check-label\" for=\"inputRiver\">River/Lake/Water</label>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-3\">\r\n                    <input name=\"nature\" type=\"checkbox\" className=\"form-check-input px-0\" id=\"inputNature\"\r\n                        checked={detailRecord.nature ? detailRecord.nature : false} onChange={handleBooleanChange}></input>\r\n                    <label className=\"form-check-label\" for=\"inputNature\">Nature/Park/Forest</label>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-3\">\r\n                    <input name=\"desert\" type=\"checkbox\" className=\"form-check-input px-0\" id=\"inputDesert\"\r\n                        checked={detailRecord.desert ? detailRecord.desert : false} onChange={handleBooleanChange}></input>\r\n                    <label className=\"form-check-label\" for=\"inputDesert\">Desert/Sand/Dunes</label>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-3\">\r\n                    <input name=\"sports\" type=\"checkbox\" className=\"form-check-input px-0\" id=\"inputSports\"\r\n                        checked={detailRecord.sports ? detailRecord.sports : false} onChange={handleBooleanChange}></input>\r\n                    <label className=\"form-check-label\" for=\"inputSports\">Sports/Recreation/Fun</label>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-3\">\r\n                    <input name=\"religious\" type=\"checkbox\" className=\"form-check-input px-0\" id=\"inputReligious\"\r\n                        checked={detailRecord.religious ? detailRecord.religious : false} onChange={handleBooleanChange}></input>\r\n                    <label className=\"form-check-label\" for=\"inputReligious\">Religious/Pilgrimmage</label>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-3\">\r\n                    <input name=\"shops\" type=\"checkbox\" className=\"form-check-input px-0\" id=\"inputSports\"\r\n                        checked={detailRecord.shops ? detailRecord.shops : false} onChange={handleBooleanChange}></input>\r\n                    <label className=\"form-check-label\" for=\"inputSports\">Shopping/Outlets/Malls</label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <button className=\"btn btn-primary\" onClick={handleSubmit}>Save</button>\r\n        </form>\r\n      );\r\n    \r\n    return (\r\n        <div className='container-fluid'>\r\n            <div className='row no-gutters'>\r\n                <div className='col-4 no-gutters'>{leftSide}</div>\r\n                <div className='col-8 no-gutters'>{rightSide}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\projects\\travel\\travel\\src\\components\\depends-list.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":31,"column":10,"nodeType":"95","messageId":"96","endLine":31,"endColumn":25},{"ruleId":"93","severity":1,"message":"97","line":31,"column":27,"nodeType":"95","messageId":"96","endLine":31,"endColumn":45},{"ruleId":"93","severity":1,"message":"98","line":83,"column":9,"nodeType":"95","messageId":"96","endLine":83,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":103,"column":6,"nodeType":"101","endLine":103,"endColumn":8,"suggestions":"102"},{"ruleId":"93","severity":1,"message":"103","line":3,"column":23,"nodeType":"95","messageId":"96","endLine":3,"endColumn":29},{"ruleId":"93","severity":1,"message":"104","line":3,"column":31,"nodeType":"95","messageId":"96","endLine":3,"endColumn":42},{"ruleId":"93","severity":1,"message":"105","line":3,"column":44,"nodeType":"95","messageId":"96","endLine":3,"endColumn":54},{"ruleId":"106","severity":1,"message":"107","line":16,"column":19,"nodeType":"108","endLine":16,"endColumn":86},{"ruleId":"106","severity":1,"message":"107","line":19,"column":19,"nodeType":"108","endLine":19,"endColumn":86},{"ruleId":"93","severity":1,"message":"109","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":16},{"ruleId":"93","severity":1,"message":"110","line":51,"column":29,"nodeType":"95","messageId":"96","endLine":51,"endColumn":34},{"ruleId":"93","severity":1,"message":"111","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":18},{"ruleId":"93","severity":1,"message":"103","line":3,"column":23,"nodeType":"95","messageId":"96","endLine":3,"endColumn":29},{"ruleId":"93","severity":1,"message":"104","line":3,"column":31,"nodeType":"95","messageId":"96","endLine":3,"endColumn":42},{"ruleId":"93","severity":1,"message":"105","line":3,"column":44,"nodeType":"95","messageId":"96","endLine":3,"endColumn":54},{"ruleId":"93","severity":1,"message":"112","line":4,"column":10,"nodeType":"95","messageId":"96","endLine":4,"endColumn":16},{"ruleId":"93","severity":1,"message":"113","line":41,"column":11,"nodeType":"95","messageId":"96","endLine":41,"endColumn":27},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'loadedCustomers' is assigned a value but never used.","Identifier","unusedVar","'setLoadedCustomers' is assigned a value but never used.","'loadCustomers' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadAttractions', 'loadBookings', and 'loadTours'. Either include them or remove the dependency array.","ArrayExpression",["116"],"'Button' is defined but never used.","'FormControl' is defined but never used.","'InputGroup' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'firebase' is defined but never used.","'index' is assigned a value but never used.","'DatePicker' is defined but never used.","'format' is defined but never used.","'handleDateChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},"Update the dependencies array to be: [loadAttractions, loadBookings, loadTours]",{"range":"119","text":"120"},[3487,3489],"[loadAttractions, loadBookings, loadTours]"]